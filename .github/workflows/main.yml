  name: Hprofile Actions
  on: workflow_dispatch
  env:
    ECR_REPOSITORY: myregistry
    ECS_SERVICE: new-task-defination-service-l5890xyp
    ECS_CLUSTER: myclustername 
    CONTAINER_NAME: vproapp
    ECS_TASK_DEFINITION: aws-files/taskdeffile.json
  jobs:
      Testing:
        runs-on: ubuntu-latest
        steps:
          - name: Code checkout
            uses: actions/checkout@v4

          - name: Maven test
            run: mvn test

          - name: Checkstyle
            run: mvn checkstyle:checkstyle

          # Setup java 11 to be default (sonar-scanner requirement as of 5.x)
          - name: Set Java 11
            uses: actions/setup-java@v3
            with:
              distribution: 'temurin' # See 'Supported distributions' for available options
              java-version: '11'

        # Setup sonar-scanner
          - name: Setup SonarQube
            uses: warchant/setup-sonar-scanner@v7
      
        # Run sonar-scanner
          - name: SonarQube Scan
            run: sonar-scanner
              -Dsonar.host.url=${{ secrets.SONAR_URL }}
              -Dsonar.login=${{ secrets.SONAR_TOKEN }}
              -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
              -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
              -Dsonar.sources=src/
              -Dsonar.junit.reportsPath=target/surefire-reports/ 
              -Dsonar.jacoco.reportsPath=target/jacoco.exec 
              -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
              -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/
      BUILD_AND_PUBLISH:
          needs: Testing
          runs-on: ubuntu-latest
          steps:
            - name: Code checkout
              uses: actions/checkout@v4

            - name: Update application.properties file
              run: |
                sed -i "s/^jdbc.username.*$/jdbc.username\=${{ secrets.RDS_USER }}/" src/main/resources/application.properties
                sed -i "s/^jdbc.password.*$/jdbc.password\=${{ secrets.RDS_PASS }}/" src/main/resources/application.properties
                sed -i "s/db01/${{ secrets.RDS_ENDPOINT }}/" src/main/resources/application.properties

            - name: Build & Upload image to ECR
              uses: appleboy/docker-ecr-action@master
              with:
                access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
                secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                registry: ${{ secrets.REGISTRY }}
                repo: myregistry
                region: ${{ secrets.AWS_REGION }}
                tags: latest,${{ github.run_number }}
                daemon_off: false
                dockerfile: ./Dockerfile
                context: ./
      DEPLOY:
          needs: BUILD_AND_PUBLISH
          runs-on: ubuntu-latest
          steps:
            - name: Code checkout
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ap-south-1
            - name: Force ECS Service Deployment with same Task Def
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                task-definition: ${{ env.ECS_TASK_DEFINITION }}
                service: ${{ env.ECS_SERVICE }}
                cluster: ${{ env.ECS_CLUSTER }}
                force-new-deployment: true
                wait-for-service-stability: true
